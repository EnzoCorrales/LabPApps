/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Entidades.uytube;
import java.awt.Component;
import java.util.*;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
/**
 *
 * @author kangaru
 */
public class ListaComentarios extends javax.swing.JFrame {

    /**
     * Creates new form ListaComentarios
     */
    public ListaComentarios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        Volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        /*Sistema s = prueba.Inicio.sistema;
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Video 1");
        String nick = prueba.ListaVideos.txtusr.getText();
        String nomVideo = prueba.ListaVideos2.txtnomvideo.getText();
        DtVideo v = s.getDataVideo(nomVideo, nick);
        Collection<DtComentario> c = v.getComentarios();
        Iterator<DtComentario> it = c.iterator();
        while(it.hasNext()){
            DtComentario data = it.next();
            DefaultMutableTreeNode ini = new DefaultMutableTreeNode(data.getTexto());
            root.add(ini);
        }
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Root");
        DefaultMutableTreeNode son = new DefaultMutableTreeNode("son");
        DefaultMutableTreeNode dau = new DefaultMutableTreeNode("dau");
        DefaultMutableTreeNode dau2 = new DefaultMutableTreeNode("dau2");
        root.add(son);
        root.add(dau);
        dau.add(dau2);
        Comentarios = new JTree(root);
        add(Comentarios);*/
        Collection<String> c = new ArrayList<>();
        Collection<String> b = new ArrayList<>();
        String b1 = "b";
        String b2 = "b1";
        String test = "test";
        c.add(test);
        String tes2 = "test2";
        c.add(tes2);
        b.add(b1);
        b.add(b2);
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Inicio");
        Iterator<String> it = c.iterator();

        while(it.hasNext()){
            Iterator<String> it2 = b.iterator();
            String g = it.next();
            DefaultMutableTreeNode ini = new DefaultMutableTreeNode(g);
            root.add(ini);
            while(it2.hasNext()){
                String g1 = it2.next();
                DefaultMutableTreeNode ini1 = new DefaultMutableTreeNode(g1);
                ini.add(ini1);
            }
        }
        jTree1 = new JTree(root);
        add(jTree1);
        jScrollPane1.setViewportView(jTree1);

        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(Volver)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(Volver)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
         this.dispose();
    }//GEN-LAST:event_VolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaComentarios().setVisible(true);
            }
        });
        /*Sistema s = prueba.Inicio.sistema;
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Video 1");
        String nick = prueba.ListaVideos.txtusr.getText();
        String nomVideo = prueba.ListaVideos2.txtnomvideo.getText();
        DtVideo v = s.getDataVideo(nomVideo, nick);
        Collection<DtComentario> c = v.getComentarios();
        Iterator<DtComentario> it = c.iterator();
        while(it.hasNext()){
            DtComentario data = it.next();
            DefaultMutableTreeNode ini = new DefaultMutableTreeNode(data.getTexto());
            root.add(ini);
        }
        DefaultMutableTreeNode son = new DefaultMutableTreeNode("son");
        DefaultMutableTreeNode dau = new DefaultMutableTreeNode("dau");
        DefaultMutableTreeNode dau2 = new DefaultMutableTreeNode("dau2");
        root.add(son);
        root.add(dau);
        dau.add(dau2);*/
        Collection<String> c = new ArrayList<>();
        Collection<String> b = new ArrayList<>();
        String b1 = "b";
        String b2 = "b1";
        String test = "test";
        c.add(test);
        String tes2 = "test2";
        c.add(tes2);
        b.add(b1);
        b.add(b2);
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Inicio");
        Iterator<String> it = c.iterator();
        Iterator<String> it2 = b.iterator();
        while(it.hasNext()){
            String g = it.next();
            DefaultMutableTreeNode ini = new DefaultMutableTreeNode(g);
            root.add(ini);
            while(it2.hasNext()){
                String g1 = it2.next();
                DefaultMutableTreeNode ini1 = new DefaultMutableTreeNode(g1);
                ini.add(ini1);
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Volver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
